{"version":3,"sources":["screens/HomeScreen.js","firebase/FirebaseContext.js","screens/HighScoresScreen.js","components/QuestionComponent.js","helpers/LoadQuestion.js","components/QuizCategories.js","components/GameProgressionBar.js","components/GameHUD.js","components/FormSaveScore.js","screens/GameScreen.js","App.js","firebase/FirebaseConfig.js","index.js"],"names":["HomeScreen","className","to","FirebaseContext","React","createContext","useFirebase","useContext","HighScores","firebase","useState","scores","setScores","loading","setLoading","useEffect","once","snapshot","data","val","sortedScores","formatScoreData","firebaseScores","key","push","sort","score1","score2","score","slice","id","map","record","name","toFixed","QuestionComp","question","nxtQuestion","targetClass","setTargetClass","chosenAnswer","setChosenAnswer","answerInput","setAnswerInput","dangerouslySetInnerHTML","__html","answerOptions","choice","i","onClick","answer","bonus","setTimeout","checkAnswer","loadQuestion","a","amount","category","difficulty","type","url","fetch","res","json","result","console","log","cnvtQfromApi","error","Question","loadedQues","formattedQues","incorrect_answers","Math","floor","random","splice","correct_answer","QuizCategories","setChoice","ProgressionBar","max","width","current","style","GameHUD","time","questionNum","FormSaveScore","savedScore","username","setUsername","onSubmit","value","preventDefault","placeholder","onChange","target","disabled","Game","history","catChoice","setCatChoice","questions","setQuestions","currQuestion","setCurrQuestion","setQuestionNum","running","setRunning","elapsedTime","setElapsedTime","finished","setFinished","setScore","then","catch","timeInterval","setInterval","totalElapsedTime","clearInterval","changeQuestion","useCallback","scoreBonus","scoreModifier","length","newQuestionPool","filter","App","exact","path","component","config","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","FirebaseConfig","db","ref","app","initializeApp","this","database","ReactDOM","render","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.2993553b.chunk.js","sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom'\nimport './homescreen.css'\n\nexport default function HomeScreen() {\n  return (\n    <>\n    <div className='homemain'>\n      <h1>CodeBros Quiz App</h1>\n      <Link to='/game' className='btn'>\n        Start Game\n      </Link>\n    </div>\n    <div className='homemain'>\n      <Link to='/highScores' className='btn'>\n        High Scores\n      </Link>\n    </div>\n    </>\n  )\n}\n","import React, { useContext } from 'react'\n\nexport const FirebaseContext = React.createContext(null)\nexport const useFirebase = () => useContext(FirebaseContext)","import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useFirebase } from \"../firebase/FirebaseContext\";\n\nimport './HighScoresScreen.css'\n\nexport default function HighScores() {\n  const firebase = useFirebase();\n  const [scores, setScores] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    firebase.scores().once(\"value\", (snapshot) => {\n      const data = snapshot.val();\n      const sortedScores = formatScoreData(data);\n      setScores(sortedScores);\n      setLoading(false);\n    });\n  }, [firebase]);\n\n  const formatScoreData = (firebaseScores) => {\n    const scores = [];\n    for (let key in firebaseScores) {\n      const val = firebaseScores[key];\n      val[\"key\"] = key;\n      scores.push(val);\n    }\n    return scores\n      .sort((score1, score2) => score2.score - score1.score)\n      .slice(0, 10);\n  };\n\n  return (\n    <>\n      {loading && <div id=\"loader\"></div>}\n      {!loading && (\n        <>\n          <h1>High Scores</h1>\n          <div id=\"highScoresList\">\n            {scores.map((record) => (\n              <li key={record.key} className=\"high-score\">\n                {record.name} - {record.score.toFixed(0)}\n              </li>\n            ))}\n          </div>\n        </>\n      )}\n      <Link to=\"/\" className=\"btn\">\n        Home\n      </Link>\n    </>\n  );\n}\n","import React, { useState } from 'react'\nimport './QuestionComponent.css'\n\nexport default function QuestionComp({ question, nxtQuestion }) {\n  const [targetClass, setTargetClass]   =   useState('')\n  const [chosenAnswer, setChosenAnswer] =   useState(-1)\n  const [answerInput, setAnswerInput]   =   useState(false)\n\n  const checkAnswer = chosenAnswer => {\n    if (answerInput) return\n    setAnswerInput(true)\n    setChosenAnswer(chosenAnswer)\n    const targetClass = (chosenAnswer === question.answer ? 'correct' : 'incorrect')\n    setTargetClass(targetClass)\n    const bonus = (chosenAnswer === question.answer ? 10 : 0)\n    setTimeout(() => {\n      setChosenAnswer(-1)\n      setAnswerInput(false)\n      nxtQuestion(bonus)\n    }, 1000)\n  }\n\n  return (\n    <div>\n      <h2 dangerouslySetInnerHTML = {{ __html: question.question }}></h2>\n      { question.answerOptions.map((choice, i) => (\n        <div key={i} onClick={() => checkAnswer(i)} className={`choice-container ${chosenAnswer === i && targetClass}`}>\n            <p className='choice-prefix'>{i + 1}</p>\n            <p className='choice-text' dangerouslySetInnerHTML={{ __html: choice }}></p>\n        </div>\n      ))}\n    </div>\n  )\n}","export const loadQuestion = async (\n    amount = 10,\n    category = 18,\n    difficulty = 'medium',\n    type = 'multiple'\n) => {\n    const url = `https://opentdb.com/api.php?amount=${amount}&category=${category}&difficulty=${difficulty}&type=${type}`\n    try {\n        const res = await fetch(url)\n        const result = await res.json()\n        console.log(url)\n        return cnvtQfromApi(result)\n    } catch (err) { console.error(err) }\n}\n\nconst cnvtQfromApi = Question => {\n    return Question[\"results\"].map(loadedQues => {\n        const formattedQues = { question: loadedQues.question, answerOptions: [...loadedQues.incorrect_answers], }\n        formattedQues.answer = Math.floor(Math.random() * 4)\n        formattedQues.answerOptions.splice(formattedQues.answer, 0, loadedQues.correct_answer)\n        return formattedQues\n    })\n}","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport \"./QuizCategories.css\"\n\nexport default function QuizCategories({ setChoice }) {\n  return (\n    <div className=\"container--categories\">\n      <h1>Pick Your Quiz Category!</h1>\n      <div>\n        <button className=\"btn\" onClick={() => setChoice(18)}>Computer</button>\n        <button className=\"btn\" onClick={() => setChoice(9)}>General</button>\n        <button className=\"btn\" onClick={() => setChoice(23)}>History</button>\n        <button className=\"btn\" onClick={() => setChoice(12)}>Music</button>\n        <button className=\"btn\" onClick={() => setChoice(32)}>Cartoons and Animations</button>\n        <button className=\"btn\" onClick={() => setChoice(20)}>Mythology</button>\n        <button className=\"btn\" onClick={() => setChoice(21)}>Sports</button>\n        <button className=\"btn\" onClick={() => setChoice(22)}>Geography</button>\n        <button className=\"btn\" onClick={() => setChoice(10)}>Books</button>\n        <button className=\"btn\" onClick={() => setChoice(11)}>Movies</button>\n      </div>\n      <div className=\"backButton\">\n      <Link to=\"/\" className=\"btn\">\n          Go Back\n        </Link>\n      </div>\n    </div>\n  );\n}\n","import React from 'react'\nimport './GameProgressionBar.css'\n\nexport default function ProgressionBar({ max, current })\n{\n  const width = (current / max) * 100\n\n  return (\n    <div id='progressionBar'>\n      <div id='progressionBarFull' style={{ width: `${width}%` }}></div>\n    </div>\n  )\n}\n","import React from \"react\";\nimport ProgressionBar from \"./GameProgressionBar\";\nimport \"./GameHUD.css\";\n\nexport default function GameHUD({ score, time, questionNum }) {\n  return (\n    <div id=\"gamehud\">\n      <div className=\"gamehud-item\">\n        <p className=\"prefix\">Question {questionNum}/10</p>\n        <ProgressionBar max={10} current={questionNum} />\n      </div>\n      <div className=\"gamehud-item\">\n        <p className=\"prefix\">Time</p>\n        <h1 className=\"gamehud-main-text\">{time.toFixed(1)}</h1>\n      </div>\n      <div className=\"gamehud-item\">\n        <p className=\"prefix\">Score</p>\n        <h1 className=\"gamehud-main-text\">{score.toFixed(0)}</h1>\n      </div>\n    </div>\n  );\n}\n","import React, { useState } from 'react'\nimport { useFirebase } from '../firebase/FirebaseContext'\nimport { Link } from 'react-router-dom'\nimport './FormSaveScore.css'\n\n\nexport default function FormSaveScore({ score, savedScore }) {\n  const [username, setUsername] = useState('')\n  const firebase = useFirebase()\n\n  const onUsernameChange = value => {\n    setUsername(value.target.value)\n  }\n\n  const saveHighScore = value => {\n    value.preventDefault()\n    const record = {\n      name: username,\n      score,\n    }\n\n    firebase.scores().push(record, () => {\n        savedScore()\n    })\n  }\n\n  return (\n    <div className='container'>\n      <h1>Score: {score.toFixed(0)}</h1>\n      <form onSubmit={saveHighScore}>\n        <input\n          type='text'\n          name='username'\n          placeholder='username'\n          value={username}\n          onChange={onUsernameChange}\n        />\n        <button type='submit' className='btn' disabled={!username}>\n          Save\n        </button>\n      </form>\n      <Link to='/' className='btn'>\n        Home\n      </Link>\n    </div>\n  )\n}","import React, { useCallback, useEffect, useState } from 'react'\nimport QuestionComp from '../components/QuestionComponent'\nimport { loadQuestion } from '../helpers/LoadQuestion'\nimport QuizCategories from '../components/QuizCategories'\nimport GameHUD from '../components/GameHUD'\nimport FormSaveScore from '../components/FormSaveScore'\n\nexport default function Game({history})\n{\n  const [catChoice, setCatChoice] = useState(null)\n  const [questions, setQuestions] = useState([])\n  const [currQuestion, setCurrQuestion] = useState(null)\n  const [questionNum, setQuestionNum] = useState(0)\n  const [loading, setLoading] = useState(true)\n  const [running, setRunning] = useState(false)\n  const [elapsedTime, setElapsedTime] = useState(0)\n  const [finished, setFinished] = useState(false)\n  const [score, setScore] = useState(0)\n  \n  //Load the questions from the category chosen\n  useEffect(() =>\n  {\n    loadQuestion(10, catChoice, 'medium', 'multiple')\n      .then(setQuestions)\n      .catch(console.error)\n  }, [catChoice])\n\n  //Elapsed Time\n  useEffect(() =>\n  {\n    let timeInterval\n    if (running)\n    {\n      timeInterval = setInterval(() => setElapsedTime(totalElapsedTime => totalElapsedTime + 0.1), 100)\n    }\n    return () => clearInterval(timeInterval)\n  }, [running, currQuestion])\n\n  //Saved score\n  const savedScore = () =>\n  {\n    history.push('/')\n  }\n\n  //Change Question\n  const changeQuestion = useCallback\n  (\n    //calculating the score for previous question and add the score\n    (scoreBonus = 0) =>\n    {\n      let scoreModifier = 30 - elapsedTime\n\n      if (scoreModifier < 1)\n        scoreModifier = 1\n\n      setElapsedTime(0)\n      \n      //Checks if there are any questions remaining and caculates final score\n      if (questions.length === 0)\n      {\n        setFinished(true)\n        setRunning(false)\n        return setScore(score + scoreBonus * scoreModifier)\n      }\n\n      //Get next question to a random question\n      const currQuestion = questions[Math.floor(Math.random() * questions.length)]\n      //Removes the current displayed question from the pool\n      const newQuestionPool = [...questions].filter(question => question !== currQuestion)\n\n      setQuestions(newQuestionPool)\n      setCurrQuestion(currQuestion)\n      setLoading(false)\n      setScore(score + scoreBonus * scoreModifier)\n      setQuestionNum(questionNum + 1)\n    },\n    [\n      score, questions, questionNum, elapsedTime,\n      setQuestions, setCurrQuestion, setQuestionNum, setElapsedTime, setLoading, setRunning\n    ]\n  )\n\n  useEffect(() => {\n    if (!currQuestion && questions.length) {\n      changeQuestion()\n      setRunning(true)\n    }\n  }, [currQuestion, questions.length])\n\n  return (\n    <>\n      {loading && !finished && catChoice && <div id='loading'/>}\n      {!catChoice && (<QuizCategories setChoice={choice => setCatChoice(choice)}/>)}\n      {!finished && !loading && currQuestion && catChoice && \n      (\n        <>\n          <GameHUD questionNum={questionNum} time={elapsedTime} score={score}/>\n          <QuestionComp \n            question={currQuestion} \n            nxtQuestion={changeQuestion}/>\n        </>\n      )}\n      {finished && <FormSaveScore score={score} savedScore={savedScore} />}\n    </>\n  )\n}\n","import React from 'react'\nimport './App.css'\nimport Home from './screens/HomeScreen'\nimport HighScores from './screens/HighScoresScreen'\nimport Game from './screens/GameScreen'\nimport { HashRouter as Router, Route } from 'react-router-dom'\nimport HomeScreen from './screens/HomeScreen'\n\nfunction App() {\n  return (\n    <Router>\n      <div className='container'>\n        <Route exact path='/' component={HomeScreen} />\n        <Route path='/game' component={Game} />\n        <Route path='/highScores' component={HighScores} />\n      </div>\n    </Router>\n  )\n}\n\nexport default App","import app from 'firebase/app'\nimport 'firebase/database'\n\nconst config = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APP_ID,\n  measurementId: process.env.REACT_APP_MEASUREMENT_ID,\n}\n\nclass FirebaseConfig {\n  constructor() {\n\n    app.initializeApp(config)\n    this.db = app.database()\n  }\n\n  scores = () => this.db.ref('scores')\n}\n\nexport default FirebaseConfig","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport FirebaseConfig from \"./firebase/FirebaseConfig\"\nimport { FirebaseContext } from \"./firebase/FirebaseContext\"\n\nReactDOM.render(\n  <FirebaseContext.Provider value={new FirebaseConfig()}>\n    <App />,\n  </FirebaseContext.Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}